PA.nb.rep = 2,
PA.nb.absences = 500,
PA.strategy = 'random'
)
## format the data ----
ProLau_data <-
BIOMOD_FormatingData(
resp.var = fe.gbif.maxent["species"],
resp.xy = fe.gbif.maxent[, c('lon', 'lat')],
expl.var = present.stack,
resp.name = "Oeneis.jutta",
PA.nb.rep = 2,
PA.nb.absences = 500,
PA.strategy = 'random'
)
## formatted object summary
ProLau_data
ProLau_data
## plot of selected pseudo-absences
plot(ProLau_data)
## plot of selected pseudo-absences
plot(ProLau_data)
## formatted object summary
ProLau_data
## plot of selected pseudo-absences
plot(ProLau_data)
ProLau_data
## run the individual models ----
ProLau_models <-
BIOMOD_Modeling(
data = ProLau_data,
models = c("GLM", "GBM", "RF", "GAM"),
models.options = ProLau_opt,
NbRunEval = 2,
DataSplit = 80,
VarImport = 3,
modeling.id = "demo1"
)
## run the individual models ----
ProLau_models <-
BIOMOD_Modeling(
data = ProLau_data,
models = c("GLM", "GBM", "RF", "GAM"),
models.options = ProLau_opt,
NbRunEval = 2,
DataSplit = 80,
VarImport = 3,
modeling.id = "demo1"
)
## define individual models options ----
ProLau_opt <-
BIOMOD_ModelingOptions(
GLM = list(type = 'quadratic', interaction.level = 1),
GBM = list(n.trees = 1000),
GAM = list(algo = 'GAM_mgcv')
)
## run the individual models ----
ProLau_models <-
BIOMOD_Modeling(
data = ProLau_data,
models = c("GLM", "GBM", "RF", "GAM"),
models.options = ProLau_opt,
NbRunEval = 2,
DataSplit = 80,
VarImport = 3,
modeling.id = "demo1"
)
ProLau_data
## run the individual models ----
ProLau_models <-
BIOMOD_Modeling(
data = ProLau_data["PA1"],
models = c("GLM", "GBM", "RF", "GAM"),
models.options = ProLau_opt,
NbRunEval = 2,
DataSplit = 80,
VarImport = 3,
modeling.id = "demo1"
)
## run the individual models ----
ProLau_models <-
BIOMOD_Modeling(
data = ProLau_data@PA1,
models = c("GLM", "GBM", "RF", "GAM"),
models.options = ProLau_opt,
NbRunEval = 2,
DataSplit = 80,
VarImport = 3,
modeling.id = "demo1"
)
## run the individual models ----
ProLau_models <-
BIOMOD_Modeling(
data = ProLau_data$PA1,
models = c("GLM", "GBM", "RF", "GAM"),
models.options = ProLau_opt,
NbRunEval = 2,
DataSplit = 80,
VarImport = 3,
modeling.id = "demo1"
)
View(ProLau_data)
View(fe.gbif)
View(fe.gbif.maxent)
## format the data ----
ProLau_data <-
BIOMOD_FormatingData(
resp.var = fe.gbif.maxent["species"],
resp.xy = fe.gbif.maxent[, c('lon', 'lat')],
expl.var = present.stack,
resp.name = "Oeneis.jutta",
PA.nb.rep = 2,
PA.nb.absences = 500,
PA.strategy = 'random'
)
## formatted object summary
ProLau_data
fe.gbif.maxent["species"]
ProLau_occ
## format the data ----
ProLau_data <-
BIOMOD_FormatingData(
resp.var = fe.gbif.maxent["species"],
resp.xy = fe.gbif.maxent[, c('lon', 'lat')],
expl.var = present.stack,
resp.name = "species",
PA.nb.rep = 2,
PA.nb.absences = 500,
PA.strategy = 'random'
)
## formatted object summary
ProLau_data
## plot of selected pseudo-absences
plot(ProLau_data)
ProLau_data
View(ProLau_data)
## load the required packages
library(biomod2)
library(raster)
library(rasterVis)
library(gridExtra)
library(reshape2)
## read data ----
## species occurences data
data <- read.csv('../data/Larus_occ.csv', stringsAsFactors = FALSE)
head(data)
table(data$species)
## read data ----
## species occurences data
data <- read.csv('C:/Users/Onur/Desktop/biomod2_video_multi_species_modelling/biomod2_video_multi_species_modelling/data/Larus_occ.csv', stringsAsFactors = FALSE)
head(data)
table(data$species)
spp_to_model <- unique(data$species)
## curent climatic variables
stk_current <-
raster::stack(
c(
bio_1 =  "../data/worldclim_EU/worldclim_EU_bio_1.tif",
bio_12 = "../data/worldclim_EU/worldclim_EU_bio_12.tif",
bio_8 =  "../data/worldclim_EU/worldclim_EU_bio_8.tif"
),
RAT = FALSE
)
## build species modelling wrapper ----
biomod2_wrapper <- function(sp){
cat("\n> species : ", sp)
## get occurrences points
sp_dat <- data[data$species == sp, ]
## formating the data
sp_format <-
BIOMOD_FormatingData(
resp.var = rep(1, nrow(sp_dat)),
expl.var = stk_current,
resp.xy = sp_dat[, c("long", "lat")],
resp.name = sp,
PA.strategy = "random",
PA.nb.rep = 2,
PA.nb.absences = 1000
)
## print formatting summary
sp_format
## save image of input data summary
if(!exists(sp)) dir.create(sp)
pdf(paste(sp, "/", sp ,"_data_formated.pdf", sep="" ))
try(plot(sp_format))
dev.off()
## define models options
sp_opt <- BIOMOD_ModelingOptions()
## model species
sp_model <- BIOMOD_Modeling(
sp_format,
models = c('GLM', 'FDA', 'RF'),
models.options = sp_opt,
NbRunEval = 2,
DataSplit = 70,
Yweights = NULL,
VarImport = 3,
models.eval.meth = c('TSS', 'ROC'),
SaveObj = TRUE,
rescal.all.models = FALSE,
do.full.models = FALSE,
modeling.id = "demo2"
)
## save some graphical outputs
#### models scores
pdf(paste0(sp, "/", sp , "_models_scores.pdf"))
try(gg1 <- models_scores_graph(sp_model, metrics = c("TSS", "ROC"), by = 'models', plot = FALSE))
try(gg2 <- models_scores_graph(sp_model, metrics = c("TSS", "ROC"), by = 'data_set', plot = FALSE))
try(gg3 <- models_scores_graph(sp_model, metrics = c("TSS", "ROC"), by = 'cv_run', plot = FALSE))
try(grid.arrange(gg1, gg2, gg3))
dev.off()
## build ensemble models
sp_ens_model <-
BIOMOD_EnsembleModeling(
modeling.output = sp_model,
em.by = 'all',
eval.metric = 'TSS',
eval.metric.quality.threshold = 0.4,
models.eval.meth = c('TSS','ROC'),
prob.mean = FALSE,
prob.mean.weight = TRUE,
VarImport = 0
)
## do projections
proj_scen <- c("current", "2050_BC_45", "2070_BC_45")
for(scen in proj_scen){
cat("\n> projections of ", scen)
## single model projections
sp_proj <-
BIOMOD_Projection(
modeling.output = sp_model,
new.env = get(paste0("stk_", scen)),
proj.name = scen,
selected.models = 'all',
binary.meth = "TSS",
filtered.meth = NULL,
compress = TRUE,
build.clamping.mask = FALSE,
do.stack = FALSE,
output.format = ".img"
)
## ensemble model projections
sp_ens_proj <-
BIOMOD_EnsembleForecasting(
EM.output = sp_ens_model,
projection.output = sp_proj,
binary.meth = "TSS",
compress = TRUE,
do.stack = FALSE,
output.format = ".img"
)
}
return(paste0(sp," modelling completed !"))
}
## launch the spiecies modelling wrapper over species list ----
if(require(snowfall)){ ## parallel computation
## start the cluster
sfInit(parallel = TRUE, cpus = 5) ## here we only require 4 cpus
sfExportAll()
sfLibrary(biomod2)
## launch our wrapper in parallel
sf_out <- sfLapply(spp_to_model, biomod2_wrapper)
## stop the cluster
sfStop()
} else { ## sequencial computation
for (sp in spp_to_model){
biomod2_wrapper(sp)
}
## or with a lapply function in sequential model
## all_species_bm <- lapply(spp_to_model, biomod2_wrapper)
}
## current conditons
### load binary projections
f_em_wmean_bin_current <-
paste0(
spp_to_model,
"/proj_current/individual_projections/",
spp_to_model, "_EMwmeanByTSS_mergedAlgo_mergedRun_mergedData_TSSbin.img"
)
### sum all projections
if(length(f_em_wmean_bin_current) >= 2){
## initialisation
taxo_alpha_div_current <- raster(f_em_wmean_bin_current[1])
for(f in f_em_wmean_bin_current[-1]){
taxo_alpha_div_current <- taxo_alpha_div_current + raster(f)
}
}
## load the required packages
library(biomod2)
library(ggplot2)
library(gridExtra)
library(raster)
library(rasterVis)
## read data ----
ProLau_occ <- read.csv('C:/Users/Onur/Desktop/bioson/data/ProLau_occ.csv')
summary(ProLau_occ)
bioclim_ZA_sub <-
raster::stack(
c(
bio_5  = '../data/worldclim_ZA/worldclim_ZA_bio_5.asc',
bio_7  = '../data/worldclim_ZA/worldclim_ZA_bio_7.asc',
bio_11 = '../data/worldclim_ZA/worldclim_ZA_bio_11.asc',
bio_19 = '../data/worldclim_ZA/worldclim_ZA_bio_19.asc'
)
)
bioclim_ZA_sub <-
raster::stack(
c(
bio_5  = 'C:/Users/Onur/Desktop/biomod2 exercise/data/worldclim_ZA/worldclim_ZA_bio_5.asc',
bio_7  = 'C:/Users/Onur/Desktop/biomod2 exercise/data/worldclim_ZA/worldclim_ZA_bio_7.asc',
bio_11 = 'C:/Users/Onur/Desktop/biomod2 exercise/data/worldclim_ZA/worldclim_ZA_bio_11.asc',
bio_19 = 'C:/Users/Onur/Desktop/biomod2 exercise/data/worldclim_ZA/worldclim_ZA_bio_19.asc'
)
)
bioclim_ZA_sub
## format the data ----
ProLau_data <-
BIOMOD_FormatingData(
resp.var = ProLau_occ['Protea.laurifolia'],
resp.xy = ProLau_occ[, c('long', 'lat')],
expl.var = bioclim_ZA_sub,
resp.name = "Protea.laurifolia",
PA.nb.rep = 2,
PA.nb.absences = 500,
PA.strategy = 'random'
)
## formatted object summary
ProLau_data
## plot of selected pseudo-absences
plot(ProLau_data)
## read data ----
ProLau_occ <- read.csv('C:/Users/Onur/Desktop/bioson/data/Oeneis_jutta.csv')
summary(ProLau_occ)
bioclim_ZA_sub <-
raster::stack(
c(
bio_5  = 'C:/Users/Onur/Desktop/biomod2 exercise/data/worldclim_ZA/worldclim_ZA_bio_5.asc',
bio_7  = 'C:/Users/Onur/Desktop/biomod2 exercise/data/worldclim_ZA/worldclim_ZA_bio_7.asc',
bio_11 = 'C:/Users/Onur/Desktop/biomod2 exercise/data/worldclim_ZA/worldclim_ZA_bio_11.asc',
bio_19 = 'C:/Users/Onur/Desktop/biomod2 exercise/data/worldclim_ZA/worldclim_ZA_bio_19.asc'
)
)
bioclim_ZA_sub
## format the data ----
ProLau_data <-
BIOMOD_FormatingData(
resp.var = ProLau_occ['Protea.laurifolia'],
resp.xy = ProLau_occ[, c('long', 'lat')],
expl.var = bioclim_ZA_sub,
resp.name = "Protea.laurifolia",
PA.nb.rep = 2,
PA.nb.absences = 500,
PA.strategy = 'random'
)
## formatted object summary
ProLau_data
## plot of selected pseudo-absences
plot(ProLau_data)
## format the data ----
ProLau_data <-
BIOMOD_FormatingData(
resp.var = ProLau_occ['species'],
resp.xy = ProLau_occ[, c('long', 'lat')],
expl.var = bioclim_ZA_sub,
resp.name = "species",
PA.nb.rep = 2,
PA.nb.absences = 500,
PA.strategy = 'random'
)
## format the data ----
ProLau_data <-
BIOMOD_FormatingData(
resp.var = ProLau_occ['species'],
resp.xy = ProLau_occ[, c('lon', 'lat')],
expl.var = bioclim_ZA_sub,
resp.name = "species",
PA.nb.rep = 2,
PA.nb.absences = 500,
PA.strategy = 'random'
)
View(ProLau_occ)
## read data ----
ProLau_occ <- read.csv('C:/Users/Onur/Desktop/bioson/data/Oeneis_jutta.csv')
summary(ProLau_occ)
## read data ----
ProLau_occ <- read.csv('C:/Users/Onur/Desktop/bioson/data/Oeneis_jutta.csv')
## read data ----
ProLau_occ <- read.csv('C:/Users/Onur/Desktop/bioson/data/Oeneis_jutta.csv')
summary(ProLau_occ)
## format the data ----
ProLau_data <-
BIOMOD_FormatingData(
resp.var = ProLau_occ['species'],
resp.xy = ProLau_occ[, c('lon', 'lat')],
expl.var = bioclim_ZA_sub,
resp.name = "species",
PA.nb.rep = 2,
PA.nb.absences = 500,
PA.strategy = 'random'
)
## formatted object summary
ProLau_data
## plot of selected pseudo-absences
plot(ProLau_data)
bioclim_ZA_sub <-
raster::stack(
c(
bio_5  = 'D:/Github/BGE-SDM/RDATA/clipped/fe_buffer_bio05.asc',
bio_7  = 'D:/Github/BGE-SDM/RDATA/clipped/fe_buffer_bio07.asc',
bio_11 = 'D:/Github/BGE-SDM/RDATA/clipped/fe_buffer_bio11.asc',
bio_19 = 'D:/Github/BGE-SDM/RDATA/clipped/fe_buffer_bio19.asc'
)
)
bioclim_ZA_sub
## format the data ----
ProLau_data <-
BIOMOD_FormatingData(
resp.var = ProLau_occ['species'],
resp.xy = ProLau_occ[, c('lon', 'lat')],
expl.var = bioclim_ZA_sub,
resp.name = "species",
PA.nb.rep = 2,
PA.nb.absences = 500,
PA.strategy = 'random'
)
## formatted object summary
ProLau_data
## plot of selected pseudo-absences
plot(ProLau_data)
#### Install required libraries ####
library(rgbif)
library(raster)
library(sp)
library(mapr)
library(dismo)
library(rgeos)
library(sf)
P4S.latlon <- CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
#### Define extent and import study area shapefile ####
#Import shapefile
countries <- rgdal::readOGR("D:/Github/BGE-SDM/GISDATA/Study Area SHP")
#dev.off()
proj4string(countries) <- P4S.latlon
plot(countries)
str(countries); countries@bbox
#Define extent
extent <- extent(-43, 109, 25, 81) ##NEED TO BE REARRANGE FOR EAST SIDE
#### 1. GBIF DATA ####
#get the key of species by its name
key = name_backbone(name="Oeneis jutta")$speciesKey
#search data according to key. **occ_data vs occ_Search
dat <- occ_data(taxonKey = key,limit=1000) #limit??
names(dat)
names(dat$data)
#assign data to a variable
dat.data <- dat$data
dat.data
#plot occurences
map_plot(dat.data, lon = "decimalLongitude", lat = "decimalLatitude", size = 1, pch = 3)
#plot occurrences data and the study area
plot(countries); points(dat.data$decimalLongitude, dat.data$decimalLatitude, pch=19, col="red")
plot(countries)
#Prepare the data
fe.gbif <- dat.data[, c('species', 'decimalLongitude', 'decimalLatitude')]
head(fe.gbif); dim(fe.gbif)
duplicates <- duplicated(fe.gbif)
fe.gbif <- fe.gbif[!duplicates,]
head(fe.gbif); dim(fe.gbif)
write.csv(fe.gbif, 'D:/Github/BGE-SDM/Output/Oeneis_jutta.csv', row.names=F)
fe.gbif.maxent <- fe.gbif[, c("species", "decimalLongitude", "decimalLatitude")]
names(fe.gbif.maxent) <- c("species", "lon", "lat")
head(fe.gbif.maxent); dim(fe.gbif.maxent)
plot(countries); points(fe.gbif.maxent$lon, fe.gbif.maxent$lat, pch=19, col='red')
write.csv(fe.gbif.maxent, 'D:/Github/BGE-SDM/Output/fe.gbif.maxent.csv', row.names=F) # write species points file
#assign the fe.gbif as SpatialPointsDataFrame
coordinates(fe.gbif) <- ~decimalLongitude+decimalLatitude
str(fe.gbif)
#assign CRS
P4S.latlon <- CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
fe.gbif@proj4string <- P4S.latlon
plot(countries); plot(fe.gbif, col='red', add=T, pch = 16)
files.present
# read worldclim
files.present <- list.files('D:/Github/BGE-SDM/RDATA/clipped/', pattern="[.]asc$", full.names=T) # alternatives for pattern (c|C)(e|E)(l|L)$
files.present
present.stack <- stack(files.present)
head(present.stack)
present.df <- as.data.frame(present.stack, xy=T)
coordinates(present.df) <- ~x+y
gridded(present.df) <- T
present.df@proj4string <- P4S.latlon
present.df$grid.index <- present.df@grid.index # Add grid.index value
head(present.df)
image(present.df, 'fe_buffer_bio01') #Annual Mean Temperature
str(present.df)
class(present.df)
present.df@coords
present.df@proj4string <- P4S.latlon
View(fe.gbif.maxent)
## format the data ----
ProLau_data <-
BIOMOD_FormatingData(
resp.var = fe.gbif.maxent["species"],
resp.xy = fe.gbif.maxent[, c('lon', 'lat')],
expl.var = present.stack,
resp.name = "species",
PA.nb.rep = 2,
PA.nb.absences = 500,
PA.strategy = 'random'
)
## plot of selected pseudo-absences
plot(ProLau_data)
